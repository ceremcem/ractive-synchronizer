// Generated by LiveScript 1.4.0
var toString$ = {}.toString;
window.getSynchronizer = function(placeholder){
  var this$ = this;
  if (placeholder && toString$.call(placeholder).slice(8, -1) !== 'String') {
    throw new Error("placeholder MUST be the component's name");
  }
  return Ractive.macro(function(handle, attrs){
    var actualComp, loadingComp, obj, _orig, orig, modComp;
    actualComp = handle.name + "ASYNC";
    loadingComp = placeholder || handle.name + "LOADING";
    obj = {
      observers: [],
      update: function(attrs){},
      teardown: function(){
        return obj.observers.forEach(function(it){
          return it.cancel();
        });
      }
    };
    _orig = handle.template;
    delete _orig.p;
    orig = {
      v: 4,
      t: [_orig],
      e: {}
    };
    modComp = function(name){
      _orig.e = name;
      return orig;
    };
    obj.observers.push(handle.observe('@shared.deps._all', function(val){
      if (Ractive.components[actualComp]) {
        handle.setTemplate(modComp(actualComp));
      } else if (Ractive.components[loadingComp]) {
        handle.setTemplate(modComp(loadingComp));
      } else {
        handle.setTemplate("<div class='ui yellow message'>\n    We are fetching <i>" + handle.name + "</i>\n</div>");
      }
    }));
    return obj;
  });
};
